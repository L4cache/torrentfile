# Patch generated by Pyment v0.3.3

--- a/metafile.py
+++ b/metafile.py
@@ -79,7 +79,7 @@
 
 class TorrentFile:
     """Class for creating Bittorrent meta files.
-
+    
     Construct *Torrentfile* class instance object.
 
     Args:
@@ -179,6 +179,8 @@
     def assemble(self):
         """Assemble components of torrent metafile.
 
+        Args:
+
         Returns:
           `dict`: metadata dictionary for torrent file
 
@@ -231,19 +233,21 @@
 
 class Checker:
     """Check a given file or directory to see if it matches a torrentfile.
-
+    
     Public constructor for Checker class instance.
 
     Args:
-      metafile:(`str`): Path to ".torrent" file.
+      metafile: (`str`): Path to ".torrent" file.
       location(`str`): Path where the content is located in filesystem.
-
     Example:
-        >> metafile = "/path/to/torrentfile/content_file_or_dir.torrent"
-        >> location = "/path/to/location"
-        >> os.path.exists("/path/to/location/content_file_or_dir")
-        Out: True
-        >> checker = Checker(metafile, location)
+    >> metafile = "/path/to/torrentfile/content_file_or_dir.torrent"
+    >> location = "/path/to/location"
+    >> os.path.exists("/path/to/location/content_file_or_dir")
+    Out: True
+    >> checker = Checker(metafile, location)
+
+    Returns:
+
     """
 
     def __init__(self, metafile, location):
@@ -323,8 +327,10 @@
     def check_path(self):
         """Check if path exists and is the correct size and hash.
 
-        Returns:
-            `str`: Indicating process has completed.
+        Args:
+
+        Returns:
+          `str`: Indicating process has completed.
 
         """
         base = os.path.join(self.location, self.name)
@@ -349,13 +355,16 @@
 
 class Feeder:
     """Seemlesly generate hashes of piece length data from filelist contents.
-
+    
     Constructor for the Feeder class.
 
     Args:
       paths(`list`): List of files.
       piece_length(`int`): Size of chuncks to split the data into.
       total(`int`): Sum of all files in file list.
+
+    Returns:
+
     """
 
     def __init__(self, paths, piece_length, total):
